{"ast":null,"code":"import React,{useState,useEffect}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const JoinRide=_ref=>{let{userInfo,onRideJoined}=_ref;const[rides,setRides]=useState([]);const[selectedRide,setSelectedRide]=useState('');useEffect(()=>{const allRides=JSON.parse(localStorage.getItem('rides'))||[];setRides(allRides);},[]);const handleJoin=rideIndex=>{const allRides=JSON.parse(localStorage.getItem('rides'))||[];const ride=allRides[rideIndex];if(ride.joinedUsers.find(user=>user.phoneNumber===userInfo.phoneNumber)){alert('You have already joined this ride.');return;}if(ride.seatsAvailable<=0){alert('No seats available.');return;}ride.joinedUsers.push({name:userInfo.name,phoneNumber:userInfo.phoneNumber});ride.seatsAvailable-=1;allRides[rideIndex]=ride;localStorage.setItem('rides',JSON.stringify(allRides));// Add the joined ride to the user's profile\nconst userJoinedRides=JSON.parse(localStorage.getItem('userJoinedRides'))||[];userJoinedRides.push(ride);localStorage.setItem('userJoinedRides',JSON.stringify(userJoinedRides));// Call the callback to update the profile\nonRideJoined(ride);alert('You have joined the ride.');};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Join a Ride\"}),/*#__PURE__*/_jsx(\"ul\",{children:rides.map((ride,index)=>/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Destination:\"}),\" \",ride.destination,\" \",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"strong\",{children:\"Car Details:\"}),\" \",ride.carDetails,\" \",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"strong\",{children:\"Seats Available:\"}),\" \",ride.seatsAvailable,\" \",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"strong\",{children:\"Pick-up Preference:\"}),\" \",ride.pickupPreference,\" \",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"strong\",{children:\"Date:\"}),\" \",ride.rideDate,\" \",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"strong\",{children:\"Time:\"}),\" \",ride.rideTime,\" \",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleJoin(index),disabled:ride.seatsAvailable<=0,style:{backgroundColor:'black',color:'white'}// Change background to black\n,children:ride.seatsAvailable>0?'Join this Ride':'No Seats Available'})]},index))})]});};export default JoinRide;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","JoinRide","_ref","userInfo","onRideJoined","rides","setRides","selectedRide","setSelectedRide","allRides","JSON","parse","localStorage","getItem","handleJoin","rideIndex","ride","joinedUsers","find","user","phoneNumber","alert","seatsAvailable","push","name","setItem","stringify","userJoinedRides","children","map","index","destination","carDetails","pickupPreference","rideDate","rideTime","onClick","disabled","style","backgroundColor","color"],"sources":["/Users/noamglick/Desktop/UniRide/src/JoinRide.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst JoinRide = ({ userInfo, onRideJoined }) => {\n  const [rides, setRides] = useState([]);\n  const [selectedRide, setSelectedRide] = useState('');\n\n  useEffect(() => {\n    const allRides = JSON.parse(localStorage.getItem('rides')) || [];\n    setRides(allRides);\n  }, []);\n\n  const handleJoin = (rideIndex) => {\n    const allRides = JSON.parse(localStorage.getItem('rides')) || [];\n    const ride = allRides[rideIndex];\n    \n    if (ride.joinedUsers.find(user => user.phoneNumber === userInfo.phoneNumber)) {\n      alert('You have already joined this ride.');\n      return;\n    }\n\n    if (ride.seatsAvailable <= 0) {\n      alert('No seats available.');\n      return;\n    }\n\n    ride.joinedUsers.push({ name: userInfo.name, phoneNumber: userInfo.phoneNumber });\n    ride.seatsAvailable -= 1;\n    allRides[rideIndex] = ride;\n    localStorage.setItem('rides', JSON.stringify(allRides));\n\n    // Add the joined ride to the user's profile\n    const userJoinedRides = JSON.parse(localStorage.getItem('userJoinedRides')) || [];\n    userJoinedRides.push(ride);\n    localStorage.setItem('userJoinedRides', JSON.stringify(userJoinedRides));\n\n    // Call the callback to update the profile\n    onRideJoined(ride);\n\n    alert('You have joined the ride.');\n  };\n\n  return (\n    <div>\n      <h2>Join a Ride</h2>\n      <ul>\n        {rides.map((ride, index) => (\n          <li key={index}>\n            <strong>Destination:</strong> {ride.destination} <br />\n            <strong>Car Details:</strong> {ride.carDetails} <br />\n            <strong>Seats Available:</strong> {ride.seatsAvailable} <br />\n            <strong>Pick-up Preference:</strong> {ride.pickupPreference} <br />\n            <strong>Date:</strong> {ride.rideDate} <br />\n            <strong>Time:</strong> {ride.rideTime} <br />\n            <button \n              onClick={() => handleJoin(index)} \n              disabled={ride.seatsAvailable <= 0} \n              style={{ backgroundColor: 'black', color: 'white' }} // Change background to black\n            >\n              {ride.seatsAvailable > 0 ? 'Join this Ride' : 'No Seats Available'}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default JoinRide;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEnD,KAAM,CAAAC,QAAQ,CAAGC,IAAA,EAAgC,IAA/B,CAAEC,QAAQ,CAAEC,YAAa,CAAC,CAAAF,IAAA,CAC1C,KAAM,CAACG,KAAK,CAAEC,QAAQ,CAAC,CAAGX,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACY,YAAY,CAAEC,eAAe,CAAC,CAAGb,QAAQ,CAAC,EAAE,CAAC,CAEpDC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAa,QAAQ,CAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,EAAI,EAAE,CAChEP,QAAQ,CAACG,QAAQ,CAAC,CACpB,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAK,UAAU,CAAIC,SAAS,EAAK,CAChC,KAAM,CAAAN,QAAQ,CAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,EAAI,EAAE,CAChE,KAAM,CAAAG,IAAI,CAAGP,QAAQ,CAACM,SAAS,CAAC,CAEhC,GAAIC,IAAI,CAACC,WAAW,CAACC,IAAI,CAACC,IAAI,EAAIA,IAAI,CAACC,WAAW,GAAKjB,QAAQ,CAACiB,WAAW,CAAC,CAAE,CAC5EC,KAAK,CAAC,oCAAoC,CAAC,CAC3C,OACF,CAEA,GAAIL,IAAI,CAACM,cAAc,EAAI,CAAC,CAAE,CAC5BD,KAAK,CAAC,qBAAqB,CAAC,CAC5B,OACF,CAEAL,IAAI,CAACC,WAAW,CAACM,IAAI,CAAC,CAAEC,IAAI,CAAErB,QAAQ,CAACqB,IAAI,CAAEJ,WAAW,CAAEjB,QAAQ,CAACiB,WAAY,CAAC,CAAC,CACjFJ,IAAI,CAACM,cAAc,EAAI,CAAC,CACxBb,QAAQ,CAACM,SAAS,CAAC,CAAGC,IAAI,CAC1BJ,YAAY,CAACa,OAAO,CAAC,OAAO,CAAEf,IAAI,CAACgB,SAAS,CAACjB,QAAQ,CAAC,CAAC,CAEvD;AACA,KAAM,CAAAkB,eAAe,CAAGjB,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,CAAC,EAAI,EAAE,CACjFc,eAAe,CAACJ,IAAI,CAACP,IAAI,CAAC,CAC1BJ,YAAY,CAACa,OAAO,CAAC,iBAAiB,CAAEf,IAAI,CAACgB,SAAS,CAACC,eAAe,CAAC,CAAC,CAExE;AACAvB,YAAY,CAACY,IAAI,CAAC,CAElBK,KAAK,CAAC,2BAA2B,CAAC,CACpC,CAAC,CAED,mBACErB,KAAA,QAAA4B,QAAA,eACE9B,IAAA,OAAA8B,QAAA,CAAI,aAAW,CAAI,CAAC,cACpB9B,IAAA,OAAA8B,QAAA,CACGvB,KAAK,CAACwB,GAAG,CAAC,CAACb,IAAI,CAAEc,KAAK,gBACrB9B,KAAA,OAAA4B,QAAA,eACE9B,IAAA,WAAA8B,QAAA,CAAQ,cAAY,CAAQ,CAAC,IAAC,CAACZ,IAAI,CAACe,WAAW,CAAC,GAAC,cAAAjC,IAAA,QAAK,CAAC,cACvDA,IAAA,WAAA8B,QAAA,CAAQ,cAAY,CAAQ,CAAC,IAAC,CAACZ,IAAI,CAACgB,UAAU,CAAC,GAAC,cAAAlC,IAAA,QAAK,CAAC,cACtDA,IAAA,WAAA8B,QAAA,CAAQ,kBAAgB,CAAQ,CAAC,IAAC,CAACZ,IAAI,CAACM,cAAc,CAAC,GAAC,cAAAxB,IAAA,QAAK,CAAC,cAC9DA,IAAA,WAAA8B,QAAA,CAAQ,qBAAmB,CAAQ,CAAC,IAAC,CAACZ,IAAI,CAACiB,gBAAgB,CAAC,GAAC,cAAAnC,IAAA,QAAK,CAAC,cACnEA,IAAA,WAAA8B,QAAA,CAAQ,OAAK,CAAQ,CAAC,IAAC,CAACZ,IAAI,CAACkB,QAAQ,CAAC,GAAC,cAAApC,IAAA,QAAK,CAAC,cAC7CA,IAAA,WAAA8B,QAAA,CAAQ,OAAK,CAAQ,CAAC,IAAC,CAACZ,IAAI,CAACmB,QAAQ,CAAC,GAAC,cAAArC,IAAA,QAAK,CAAC,cAC7CA,IAAA,WACEsC,OAAO,CAAEA,CAAA,GAAMtB,UAAU,CAACgB,KAAK,CAAE,CACjCO,QAAQ,CAAErB,IAAI,CAACM,cAAc,EAAI,CAAE,CACnCgB,KAAK,CAAE,CAAEC,eAAe,CAAE,OAAO,CAAEC,KAAK,CAAE,OAAQ,CAAG;AAAA,CAAAZ,QAAA,CAEpDZ,IAAI,CAACM,cAAc,CAAG,CAAC,CAAG,gBAAgB,CAAG,oBAAoB,CAC5D,CAAC,GAbFQ,KAcL,CACL,CAAC,CACA,CAAC,EACF,CAAC,CAEV,CAAC,CAED,cAAe,CAAA7B,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}